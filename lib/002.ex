defmodule Euler.P002 do

  require Integer

  @instructions """
  Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
  """
  
  def gen_fib(limit), do: gen_fib(1, 1, [1], limit)
  def gen_fib(a,b, acc, limit) when b < limit do
    gen_fib(b, a + b, acc ++ [b], limit)
  end
  def gen_fib(_, _, acc, _), do: acc

  def add_if_even([], acc), do: acc
  def add_if_even(nums), do: add_if_even(nums, 0)
  def add_if_even([num|tail], acc) do
    if Integer.is_even(num), do: add_if_even(tail, num + acc), else: add_if_even(tail, acc)
  end

  def solve(limit), do: gen_fib(limit) |> add_if_even

  def print do
    IO.puts solve(4_000_000)
  end

end
